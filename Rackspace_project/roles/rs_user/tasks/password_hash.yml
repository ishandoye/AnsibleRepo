---
- name: Generating password hash from rack password
  block:
    - name: Get login user
      uri:
        url: "{{ core_api }}/{{ core_attrib }}/{{ rs_server }}/rba_login_user"
        method: GET
        headers:
          X-Auth: "{{ core_token }}"
      register: login_user

    # The hammertime dynamic inventory plugin adds the rack user password
    # to the dict rs_ctkapi_info with key rack_password
    - name: Get rack password from rs_ctkapi_info
      set_fact:
        rack_password: "{{ rs_ctkapi_info.rack_password }}"
      when:
        - rs_ctkapi_info is defined
        - rs_ctkapi_info.rack_password is defined
        - login_user.json != 'rack'

    # ACE does not automatically retrieve the rack user password
    # raxfacts does not include secrets so this task retrieves the rack user
    # password from the CORE API
    - name: Obtain rack password from CORE
      uri:
        url: "{{ core_api }}/{{ core_attrib }}/{{ rs_server }}/rack_password"
        method: GET
        headers:
          X-Auth: "{{ core_token }}"
      register: core_rack_password
      when:
        - rack_password is not defined

    - name: Obtain login user password from CORE
      uri:
        url: "{{ core_api }}/{{ core_attrib }}/{{ rs_server }}/rba_login_user_password"
        method: GET
        headers:
          X-Auth: "{{ core_token }}"
      register: core_login_password
      when:
        - rack_password is not defined

    - name: Set password from CORE as a fact
      set_fact:
        rack_password: "{{ core_login_password.json if (login_user.json == 'rack') else core_rack_password.json }}"
      when: rack_password is not defined

    - name: Set password hash
      set_fact:
        rack_hash: "{{ rack_password | password_hash('sha512') }}"

  delegate_to: localhost
  become: false
  no_log: true
...
